name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyjwt

      - name: Extract team name
        id: extract_team
        run: |
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          TEAM_NAME=$(echo $REPO_NAME | cut -d'-' -f1)
          echo "team_name=$TEAM_NAME" >> $GITHUB_ENV

      - name: Generate JWT Token with team claim
        id: jwt
        run: |
          echo "import jwt" > generate_jwt.py
          echo "import datetime" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "def generate_jwt_token_with_claim(claim_name, claim_value, secret='your-256-bit-secret'):" >> generate_jwt.py
          echo "    payload = {" >> generate_jwt.py
          echo "        claim_name: claim_value," >> generate_jwt.py
          echo "        'exp': datetime.datetime.utcnow() + datetime.timedelta(hours=1)" >> generate_jwt.py
          echo "    }" >> generate_jwt.py
          echo "    token = jwt.encode(payload, secret, algorithm='HS256')" >> generate_jwt.py
          echo "    return token" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "team_name = '${{ env.team_name }}'" >> generate_jwt.py
          echo "jwt_token = generate_jwt_token_with_claim('team', team_name)" >> generate_jwt.py
          echo "print(f'::set-output name=token::{jwt_token}')" >> generate_jwt.py
          python generate_jwt.py

      #- name: Authenticate to Vault
      #  uses: hashicorp/vault-action@v2
      #  with:
      #    url: https://vault.mycompany.com:8200
      #    token: ${{ steps.jwt.outputs.token }}
      #    secrets: |
      #      secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
      #      secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
