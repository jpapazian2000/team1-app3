name: authenticate to vault with custom claim

on:
  workflow_dispatch:
  #  push:
  #  branches:
  #    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract team name
        id: extract_team
        run: |
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          TEAM_NAME=$(echo $REPO_NAME | cut -d'-' -f1)
          echo "team_name=$TEAM_NAME" >> $GITHUB_ENV
          echo "Extracted TEAM_NAME: $TEAM_NAME"

      - name: Request OIDC Token
        id: oidc
        uses: actions/github-script@v5
        with:
          script: |
            const { GITHUB_REPOSITORY, GITHUB_REF, GITHUB_SHA, GITHUB_WORKFLOW, GITHUB_RUN_ID, GITHUB_RUN_NUMBER } = process.env;
            const teamName = process.env.TEAM_NAME;
            const audience = 'vault';
            const payload = {
              repository: GITHUB_REPOSITORY,
              ref: GITHUB_REF,
              sha: GITHUB_SHA,
              workflow: GITHUB_WORKFLOW,
              run_id: GITHUB_RUN_ID,
              run_number: GITHUB_RUN_NUMBER,
              team: teamName
            };
            const idToken = await github.actions.getOIDCToken({ audience, payload });
            return idToken;

      - name: Decode JWT Token
        run: |
          echo "import jwt" > decode_jwt.py
          echo "def decode_jwt_token(token, secret='your-256-bit-secret'):" >> decode_jwt.py
          echo "    decoded = jwt.decode(token, secret, algorithms=['HS256'])" >> decode_jwt.py
          echo "    return decoded" >> decode_jwt.py
          echo "" >> decode_jwt.py
          echo "jwt_token = '${{ steps.oidc.outputs.token }}'" >> decode_jwt.py
          echo "decoded_token = decode_jwt_token(jwt_token)" >> decode_jwt.py
          echo "print(f'Decoded JWT Token: {decoded_token}')" >> decode_jwt.py
          echo "print(f'TEAM_NAME: ${TEAM_NAME}')" >> decode_jwt.py
          python decode_jwt.py

     # - name: Authenticate to Vault
     #   uses: hashicorp/vault-action@v2
     #   with:
     #     url: https://vault.mycompany.com:8200
     #     token: ${{ steps.oidc.outputs.token }}
     #     secrets: |
     #       secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
     #       secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
